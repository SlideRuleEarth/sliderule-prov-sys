services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    hostname: localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - S3_TEST_FILES=/tmp/prov-sys/test_misc/cluster_tf_versions
      - PS_TEST_DIR=${PS_TEST_DIR:?PS_TEST_DIR is not defined?!} # define it in .env file in cwd
    volumes:
      - "${PS_SERVER_SOURCE_DIR}/test_misc/cluster_tf_versions:/tmp/prov-sys/test_misc/cluster_tf_versions"
      - "${PS_TEST_DIR}/init_aws_localstack.py:/etc/localstack/init/ready.d/init-aws.sh"  # ready hook
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 5
  ps-server:
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_SESSION_TOKEN=test
      - AWS_DEFAULT_REGION=us-west-2
      - AWS_EC2_ENDPOINT_URL=http://localstack:4566
      - AWS_S3_ENDPOINT_URL=http://localstack:4566
      - AWS_CE_ENDPOINT_URL=http://localstack:4566
      - TERRAFORM_CLI=terraform
      - DOMAIN=localhost
      - S3_FILES=/ps_server/test_misc/cluster_tf_versions
      - PS_SERVER_PORT=${PS_SERVER_PORT}
    ports:
      - 50051:50051
    image: icesat2sliderule/sliderule-ps-server:${DOCKER_TAG}
    container_name: ps-server
    depends_on:
      - localstack
  ps-db:
    image: postgres:13
    container_name: ps-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
  redis:
    image: "redis:alpine"
    container_name: redis
  django-app:
    env_file:
      - .env
    environment:
      - PS_SERVER_PORT=${PS_SERVER_PORT}
      - PS_SERVER_ALTERNATE_PORT=${PS_SERVER_ALTERNATE_PORT} 
    expose:
      - 8000
      - 5555
    image: icesat2sliderule/sliderule-ps-web:${DOCKER_TAG}
    container_name: ps-web
    privileged: true
    cap_add:
      - SYS_PTRACE
    entrypoint: /home/reg_user/ps/docker-entrypoint.sh
    volumes:
      - ${PS_WEB_DIR}/users/migrations:/home/reg_user/ps/users/migrations
      - ${PS_WEB_DIR}/api/migrations:/home/reg_user/ps/api/migrations
      #- ~/.aws/:/home/reg_user/.aws/
      - ./htmlcov:/home/reg_user/ps/htmlcov
      - ./.coveragerc:/home/reg_user/ps/.coveragerc
    depends_on:
      - ps-db
      - redis
      - ps-server
    ports:
      - "5555:5555"
  nginx:
    image: "icesat2sliderule/sliderule-ps-nginx:${DOCKER_TAG}"
    container_name: ps-nginx
    ports:
      - 80:80
    depends_on:
      - django-app
volumes:
  postgres_data:
